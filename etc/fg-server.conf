#******************************************************************************
# FutureGrid Servers Configuration
#
# This configuration file is organized for services. So you only need to 
# configure the sections of the services that you need to use
#
#******************************************************************************

#******************************************************************************
# Image Repository Server configuration
#------------------------------------------------------------------------------
#  authorizedusers: list of users (separated by commas) that can use the repo 
#  using the name of other user as first argument. This is useful for other FG
#  tools that need to call the repository in behalf of an user. This also 
#  prevents that other users can hack the client to use the repository as if 
#  they were other users.
#
#  backend: Specify the desired storage backend. Possible values are: mongodb
#  mysql, swiftmysql, swiftmongo, cumulusmysql, cumulusmongo. You need to have
#  the selected backend section configured below
#
#  log: file where logs are stored. You should include
#  the full path, otherwise it will use the current directory or $HOME. 
#
#  log_level: debug level. It can be debug, error, info, warning  
#
#******************************************************************************
[RepoServer]
authorizedusers = javi,fugang
backend = mongodb
idp = ldappass
log = /opt/futuregrid/futuregrid/var/reposerver.log
log_level = debug

[PortalDB]
host=portal.futuregrid.org
user=USER
passwd=PASSWORD
db=DB

[LDAP]
LDAPHOST=ldap.futuregrid.org
LDAPUSER=uid=USER,ou=People,dc=futuregrid,dc=org
LDAPPASS=PASSWD

#******************************************************************************
# Image Repository Storage Backend configurations
#------------------------------------------------------------------------------
#  This sections collect the different backend configurations. You only need to
#  provide the one that you want to use. That is why all look like the same
#
#  address: Address where MongoDB or mysql are listening. In the case of mongodb
#  we can use a list of address:ports separated by commas
#
#  userAdmin = user for MongoDB or mysql
#
#  configfile = config file that contains the password for MongoDB or mysql
#
#  addressS: Address where complementary service is listening (cumulus, swift)
#
#  userAdminS = user for complementary service (cumulus, swift)
#
#  configfileS = config file that contains the password for complementary
#  service (cumulus, swift)
#
#  imgStore: Directory where the images are uploaded to the server. This is
#  a temporal directory in all cases but the mysql one.
#******************************************************************************

[mongodb]
address = localhost:23000
userAdmin =
configFile = 
imgStore = /tmp/

[mysql]
address= localhost
userAdmin = IRUser
configFile = /opt/futuregrid/futuregrid/var/.mysql.conf
imgStore=/srv/irstore/

[swiftmysql]
address = localhost
userAdmin = IRUser
configFile = /opt/futuregrid/futuregrid/var/.mysql.conf
addressS = 192.168.1.2
userAdminS = test:tester
configFileS = /opt/futuregrid/futuregrid/var/.swift.conf
imgStore =/tmp/

[swiftmongo]
address = localhost:23000
userAdmin = 
configFile = 
addressS = 192.168.1.2
userAdminS = test:tester
configFileS = /opt/futuregrid/futuregrid/var/.swift.conf
imgStore =/tmp/

[cumulusmysql]
address = localhost
userAdmin = IRUser
configFile = /opt/futuregrid/futuregrid/var/.mysql.conf
addressS = 192.168.1.2
userAdminS = PgkhmT23FUv7aRZND7BOW
configFileS = /opt/futuregrid/futuregrid/var/.cumulus.conf
imgStore =/tmp/

[cumulusmongo]
address = localhost:23000
userAdmin = 
configfile = 
addressS = 192.168.1.2
userAdminS = PgkhmT23FUv7aRZND7BOW
configfileS = /opt/futuregrid/futuregrid/var/.cumulus.conf
imgStore =/tmp/

#******************************************************************************
# Image Generate Server configuration
#------------------------------------------------------------------------------
#  port: is the port where this server (IMGenerateServer.py) will be listening
#
#  proc_max: number of request that can be processed at the same time
#
#  refresh: interval to check the status of the running requests when proc_max
#  is reached. If some request has the completed status, and a new request can 
#  be processed.
#
#  vmfile_*: Is the OpenNebula template to boot the proper VM where the image
#  will be generated. Currently four VM are considered
#
#  xmlrpcserver: Server address to interact with OpenNebula
# 
#  bridge: To identify the IP that will be used to interact with the VM
#
#  serverdir: path where to locate IMGenerateScript.py. If not provided, it 
#  will be used the same directory where IMGenerateServer.py is. Optional 
#  parameter
#
#  addrnfs: address of the machine that shares the directory tempserver
# 
#  tempdirserver: name of the shared dir in the server. This directory will be
#  used as scratch partition for the VM. In this way, the VM disks can be small
#
#  tempdir: name of the shared dir in the VM. This is where the previous dir is
#  mounted in the VM.
#
#  http_server: Address of the http server that keeps config files 
#  for the images. This information is for IMGenerateScript.py
#
#  bcfg2_url: Address of the machine where our IMBcfg2GroupManagerServer.py
#  is running. This information is for IMGenerateScript.py
#
#  bcfg2_port: Port where the previous service is listening. This information
#  is for IMGenerateScript.py
#
#  oneuser: user that will manage the VM for the image generation
#
#  onepass: password of the user. you get that executing "oneuser list" with 
#  the oneadmin user
#
#  log: file where logs are stored. You should include
#  the full path, otherwise it will use the current directory. 
#
#  log_level: debug level. It can be debug, error, info, warning
#
#  ca_cert: authority that sign the certificate
#
#  certfile: x509 certificate used by the service
#
#  keyfile: key of the certificate
#******************************************************************************
[GenerateServer]
port = 56791
proc_max = 5
refresh = 20
vmfile_centos = /srv/cloud/one/share/examples/centos_context.one
vmfile_rhel = 
vmfile_ubuntu = /srv/cloud/one/share/examples/ubuntu_context.one
vmfile_debian = 
xmlrpcserver = http://localhost:2633/RPC2
bridge = br1
serverdir = /srv/cloud/one/fg-management/
addrnfs = 192.168.1.6
tempdirserver = /srv/scratch/
tempdir = /media/ 
http_server = http://fg-gravel3.futuregrid.iu.edu/
bcfg2_url = fg-gravel3.futuregrid.iu.edu
bcfg2_port = 45678
oneuser = oneadmin
onepass = f8377c90fcfd699f0ddbdcb30c2c9183d2d933ea
log = fg-image-generate-server.log
log_level=debug
ca_cert=/opt/futuregrid/futuregrid/etc/imdserver/cacert.pem
certfile=/opt/futuregrid/futuregrid/etc/imdserver/imdscert.pem
keyfile=/opt/futuregrid/futuregrid/etc/imdserver/privkey.pem

#******************************************************************************
# Image Server xCAT configuration
#------------------------------------------------------------------------------
#  xcat_port: Port where this server (IMDeployServerXcat.py) will listen
#
#  xcatNetbootImgPath: path used by xCAT to store the netboot images
#
#  http_server: Address of the http server that keeps config files 
#  for the images
#
#  log: file where logs are stored. You should include
#  the full path, otherwise it will use the current directory. 
#
#  log_level: debug level. It can be debug, error, info, warning
#
#  test_mode: This is to test this server in a machine without xcat. It is 
#  optional and False as default.
#
#  default_xcat_kernel_*: Default kernel name for each linux distribution
#
#  tempdir: Scratch directory, used to extract the image and read the manifest
#  Then, the image is moved to the real directory using the manifest info.
#
#  ca_cert: authority that sign the certificate
#
#  certfile: x509 certificate used by the service
#
#  keyfile: key of the certificate
#******************************************************************************
[DeployServerXcat]
xcat_port=56789
xcatNetbootImgPath=/install/netboot/
http_server=http://fg-gravel3.futuregrid.iu.edu/
log=fg-image-deploy-server-xcat.log
log_level=debug
test_mode=True
default_xcat_kernel_centos = 2.6.18-164.el5
default_xcat_kernel_ubuntu = 2.6.35-22-generic
tempdir=/media/
ca_cert=/opt/futuregrid/futuregrid/etc/imdserver/cacert.pem
certfile=/opt/futuregrid/futuregrid/etc/imdserver/imdscert.pem
keyfile=/opt/futuregrid/futuregrid/etc/imdserver/privkey.pem

#******************************************************************************
# Image Server Moab Configuration
#------------------------------------------------------------------------------
#  moab_port: Port where this server (IMDeployServerMoab.py) will listen
#
#  moabInstallPath: path where moab is installed
#
#  timeToRestartMoab: seconds to restart the moab scheduler. This prevent to 
#  restart the scheduler each time an image is register. This also induces a 
#  delay in the status of the available images.
#
#  log: file where logs are stored
#  
#  log_level: debug level. It can be debug, error, info, warning
#
#  ca_cert: authority that sign the certificate
#
#  certfile: x509 certificate used by the service
#
#  keyfile: key of the certificate
#******************************************************************************
[DeployServerMoab]
moab_port = 56790
moabInstallPath = /opt/moab/
timeToRestartMoab = 5
log = fg-image-deploy-server-moab.log
log_level = debug
ca_cert=/opt/futuregrid/futuregrid/etc/imdserver/cacert.pem
certfile=/opt/futuregrid/futuregrid/etc/imdserver/imdscert.pem
keyfile=/opt/futuregrid/futuregrid/etc/imdserver/privkey.pem
